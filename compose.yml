version: '2'

services:

  # PostgreSQL database
  postgres:
    container_name: "postgres"
    image: postgres:10.2-alpine
    hostname: postgres
    env_file:
      - ./envs/postgres-dev.env
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  # pgAdmin
  pgadmin:
    container_name: "pgadmin"
    image: jayjohnson/pgadmin4:1.0.0
    hostname: pgadmin
    env_file:
      - ./envs/pgadmin-dev.env
    ports:
      - "83:5050"
    volumes:
      - ./data/pgadmin:/data
  
  # Redis
  redis:
    container_name: "redis"
    hostname: redis
    image: redis:4.0.5-alpine
    ports:
      - "6379:6379"

  # Jupyter notebooks, converted noteooks as presentation html slides, and tensorboard
  jupyter:
    container_name: "jupyter"
    hostname: jupyter
    image: jayjohnson/ai-core:latest
    network_mode: "host"
    environment:
      - JUPYTER_PASS=admin
      - SHARED_DIR=/opt/data
      - BROKER_URL=redis://0.0.0.0:6379/6
    ports:
      - "8888:8888"
      - "8889:8889"
      - "6006:6006"
    entrypoint: "/opt/antinex-core/docker/jupyter/start-container.sh"

  # AntiNex Celery Worker for using pre-trained models
  core:
    container_name: "core"
    hostname: core
    image: jayjohnson/ai-core:latest
    network_mode: "host"
    environment:
      - JUPYTER_PASS=admin
      - SHARED_DIR=/opt/data
      - BROKER_URL=redis://0.0.0.0:6379/6
    depends_on:
      - postgres
      - redis
    entrypoint: "/bin/sh -c 'cd /opt/antinex-api && 
                 /opt/antinex-core/run-antinex-core.sh'"

  # Django Rest Framework + JWT + Swagger
  api:
    container_name: "api"
    hostname: api
    image: jayjohnson/ai-core:latest
    network_mode: "host"
    env_file:
      - ./envs/drf-dev.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    entrypoint: "/bin/sh -c 'cd /opt/antinex-api && 
                 /opt/antinex-api/run-django.sh'"

  # Django Rest Framework Celery Worker
  worker:
    container_name: "worker"
    hostname: worker
    image: jayjohnson/ai-core:latest
    network_mode: "host"
    env_file:
      - ./envs/drf-dev.env
    depends_on:
      - api
      - postgres
      - redis
    entrypoint: "/bin/sh -c 'cd /opt/antinex-api && 
                 /opt/antinex-api/run-worker.sh'"
